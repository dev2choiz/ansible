---
# tasks file for me.golang

- name: Check if golang is installed
  shell: "command -v go || true"
  register: go_in_path
  changed_when: false

- name: Get installed golang version if present
  shell: "go version"
  register: go_version
  changed_when: false
  when: go_in_path.stdout != ""

- name: Set installed_go_version fact
  set_fact:
    installed_go_version: "{{ go_version.stdout.split(' ')[2] | regex_replace('^go','') }}"
  when: go_in_path.stdout != ""

- name: Determine if Go installation is needed
  set_fact:
    need_install_go: "{{ (installed_go_version is not defined) or (installed_go_version != var_golang_version) }}"

- name: Delete previous go installation
  when: need_install_go
  become: true
  file:
    path: /usr/local/go
    state: absent

- name: Download golang archive
  when: need_install_go
  get_url:
    url: "https://go.dev/dl/go{{ var_golang_version }}.linux-amd64.tar.gz"
    dest: /tmp/golang.tar.gz

- name: Unarchive /tmp/golang.tar.gz
  when: need_install_go
  become: true
  unarchive:
    src: /tmp/golang.tar.gz
    dest: /usr/local
    remote_src: yes

- name: Delete /tmp/golang.tar.gz
  when: need_install_go
  file:
    path: /tmp/golang.tar.gz
    state: absent

- name: Install delve
  shell: /usr/local/go/bin/go install github.com/go-delve/delve/cmd/dlv@latest
